npm uses the package.json to manage what dependencies our application has.
By default, event handlers are set to the bubbling phase.
The send() function of the XMLHttpRequest object sends the request to the server.
XMLHttpRequest is an object used to make Ajax calls.
The submit() function will submit a form using JavaScript.
The === operator compares value equality as well as data type.
You can add new DIV elements dynamically using document.createElement('div').
Undeclared is NOT a JavaScript data type.
innerHTLM is used to change the content of the HTML element.
The HTML DOM is an object based interface that allows JavaScript and other entities manipulate and create HTML elements dynamically.
You are allowed to have more than one script tag on the page for multiple JavaScript references.
<script src="my.js"></script> is the correct syntax for referring to an external script called "my.js".
After defining an object you can still add properties to it.
getElementsByTagName() is the best method to use if you want to grab all paragraphs on the page.
A callback function is a function that is an argument of another function that is typically executed before returning.
The number -1000, is considered truthy.
Controllers are NOT supported as of Angular 2.
Angular 2 supports TypeScript. TypeScript is one of the main drivers behind Angular 2 because of the support for constructs such as Decorators.
The AppComponent is typically the name for an Angular 2 application's root component. The AppComponent is the Component defined in app-component.ts and serves as the main component of the application.
main.ts specifies how to compile the application and specifies the main module.
app-module.ts defines the AppModule component. It is the root module and will link all other components of your application here.
Data-binding is the association of data/events with elements and user interactions.
Directives are elements, attributes and CSS style classes that you bind on your HTML templates.
A Component is a specialized Directive that controls a portion of a webpage.
A template is HTML code mixed with Angular constructs. It defines the view of your application. Metadata is considered to be a collection of data values passed to a component.
Services are features or values that you want defined in one location but in general are used throughout your application.
You typically define one root module and typically define additional features of your application as other modules tied into your root module. The purpose of modules is to organize a specific feature or related functionality in one container allowing you to define multiple modules for each feature and associate them later through a root module.
Interpolation is a way to display data from your Angular code on your templates.
{{}} (double curly braces) is the syntax to use interpolation.
@NgModule is the decorator used to specify metadata for the root module.
The three main properties that you specify inside @NgModule are declarations, bootstrap and imports. There are others used for specifying services and other constructs. Definitions, components and services, however, are not valid properties of @NgModule.
Components, directives and pipes are to be specified as values of the declarations property. Services are specified in the providers array and other modules are specified as values for the imports property.
Other modules are specified as part of the imports property of @NgModule.
Angular will match the selector property of the root component to an element in index.html during the bootstrapping process.
[(ngModel)] is the attribute used for two-way data-binding and its value should be equal to the property that you want to bind.
Interpolation is used only for string-based values. Use property-binding for other datatypes.
Property Binding use brackets [] to surround the property.
Event-binding associates DOM events to component functions.
(click) is an example of event-binding.
@Directive is used for creating custom directives.
ngModel, ngClass and ngStyle are examples of attribute directives.
ngIf will toggle an element's existence in the DOM based on the boolean value of the expression.
ngClass is used to manipulate multiple pre-defined classes at once.
Selector, template, and templateUrl are all valid properties of the @Component decorator.
<script> tags are NOT permitted within Angular 2 Templates.
You can use a service within another.
A route is a path and an associated component.
RouterModule.forRoot(routes) is the method you call to configure the routes in your application with the module.
RouterOutlet is the directive used to specify the location of routable content to display.
RouterLink is used to navigate to internal URL inside of an Angular application. href is used to navigate to external URLs or websites outside of the current application.
A component is an important feature in Angular 2. You'll find that many constructs in Angular 2 are referred to as Components. There is a special decorator that you'll have to use, @Component, even when creating a component.
Modules are used to organize code in features or related functionality in order to prevent code bloat and promote code reuse.
A Logging Service is a type of feature that may be injected into another class.
Dependency injection is a supported feature in Angular 2 closely tied to services which allows you to define functionality in one class and use it throughout your application.
The root module does not have be named AppModule. It is a convention to use AppModule, but Angular2 doesn't require it.
Two-way Data-binding is like property-binding and event-binding together.
Bootstrapping is the process during which your Root Component is inserted into the DOM.
Property binding utilizes a single set of square brackets.